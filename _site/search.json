[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website you will find my coursework prepared for this course."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages is installed in the computer. If yes, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-Home_Ex01/Take-home_Ex01.html",
    "title": "Take Home Exercise",
    "section": "",
    "text": "This purpose of the dashboard is to show the demographic structure of Singapore at planning area level by gender and age group using age-sex pyramid method. Nine selected planning areas is displayed on a single view by using trellis display."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex01/Take-home_Ex01.html#import-data",
    "href": "Take-home_Ex/Take-Home_Ex01/Take-home_Ex01.html#import-data",
    "title": "Take Home Exercise",
    "section": "4.1 Import data",
    "text": "4.1 Import data\n\n\n\n\n\n\n\n\nNo.\nStep\nScreenshot\n\n\n\n\n1.\nLoad the respopagesextod2022.csv data file into Tableau Desktop\n |\n\n\n2.\nPreview data under the [Data Source] tab. The data set contains 7 fields and 100927 rows.\nRename field name [PA] to [Planning Area] and [AG] to [Age] for easy reference."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex01/Take-home_Ex01.html#create-the-age-sex-pyramid",
    "href": "Take-home_Ex/Take-Home_Ex01/Take-home_Ex01.html#create-the-age-sex-pyramid",
    "title": "Take Home Exercise",
    "section": "4.2 Create the Age-Sex Pyramid",
    "text": "4.2 Create the Age-Sex Pyramid\n\n\n\n\n\n\n\n\nNo.\nStep\nScreenshot\n\n\n\n\n1.\nCreate a new Sheet 1. Drag [Age] to Rows. You will see a table with all the Ages in rows.\n |\n\n\n2.\nRight click on Data panel on left and create a calculated field with formula as the screenshot on left. Name the field as [Male Pop]. This create a new column which\n\n\n\n3.\nCreate another calculated field [Female Pop] with the formula on the right.\n\n\n\n4.\nDrag the calculated field to columns. This will create two bar chart side by side.\nDrag [Sex] to Colour and edit the color for Female and Male.\n\n\n\n5.\nRight click on [Male Pop] Axis, select edit axis and check the box for Reversed."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex01/Take-home_Ex01.html#create-trellis-chart",
    "href": "Take-home_Ex/Take-Home_Ex01/Take-home_Ex01.html#create-trellis-chart",
    "title": "Take Home Exercise",
    "section": "4.3 Create trellis chart",
    "text": "4.3 Create trellis chart\n\n\n\n\n\n\n\n\nNo.\nStep\nScreenshot\n\n\n\n\n1.\nAdd one calculated field called [Columns] and another two calculated field called [Rows]. Formulas listed on the screenshot.\n\n\n\n2.\nDrag [Planning Area] to filter\n\n\n\n3.\nSelect top 9 planning area with most population on the right filter\n\n\n\n4.\nDrag [Columns] to the Columns and [Rows] to Rows on top. A 3 x 3 table is created.\nSelect [Column] and choose Compute Using [Planning Area]. Repeat the same for [Rows]"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex01/Take-home_Ex01.html#create-and-publish-dashboard",
    "href": "Take-home_Ex/Take-Home_Ex01/Take-home_Ex01.html#create-and-publish-dashboard",
    "title": "Take Home Exercise",
    "section": "4.5 Create and Publish Dashboard",
    "text": "4.5 Create and Publish Dashboard\n\n\n\n\n\n\n\n\nNo.\nStep\nScreenshot\n\n\n\n\n1.\nClick on new Dashboard. Drag the “Population pyramid by planning area” worksheet to “Sheets” section on the left.\n\n\n\n2.\nOn the left bar, choose Automatic under Size. This is to allow the dashboard frame fits to different browser size.\n\n\n\n3.\nGo to Data on the top navigation bar and choose Extract data. Press Extract in the dialog box.\n |\n\n\n4.\nGo to Sever at the top navigator bar and choose Tableau Public and Save to Tableau Public\n\n\n\n5.\nThe tableau dashboard is published under my tableau public account and a website is generated for share."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex01/Take-home_Ex01.html#negative-growth",
    "href": "Take-home_Ex/Take-Home_Ex01/Take-home_Ex01.html#negative-growth",
    "title": "Take Home Exercise",
    "section": "Negative growth",
    "text": "Negative growth\nAll of the 9 Planning Area shared similar age pattern."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands on Exercise 2",
    "section": "",
    "text": "Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see https://quarto.org."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#running-code",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#running-code",
    "title": "Hands on Exercise 2",
    "section": "Running Code",
    "text": "Running Code\nWhen you click the Render button a document will be generated that includes both content and the output of embedded code. You can embed code like this:\n\n1 + 1\n\n[1] 2\n\n\nYou can add options to executable code like this\n\n\n[1] 4\n\n\nThe echo: false option disables the printing of code (only output is displayed)."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex01/Take-home_Ex01.html#format-charts",
    "href": "Take-home_Ex/Take-Home_Ex01/Take-home_Ex01.html#format-charts",
    "title": "Take Home Exercise",
    "section": "4.4 Format Charts",
    "text": "4.4 Format Charts\n\n\n\n\n\n\n\n\nNo.\nStep\nScreenshot\n\n\n\n\n1.\nCreate a calculated field called “Total Pop” using FIXED[Planning Area]. This is to calculate the total population for each planning area\n\n\n\n2.\nUnder SUM(Female Pop) on the left panel, drag [Planning Area] and [Total Pop] to Label.\n\n\n\n3.\nUnder label, check the box for show mark labels. Check the box for (Allow labels to overlap other marks) and (Label maximum label). The label for each planning area and total population will appear on the top of each chart.\n\n\n\n4.\nClick on Tooltip and edit the information as screenshot\n\n\n\n5.\nRight click the graph and choose format. Format the grid lines for column.\n\n\n\n6.\nDouble click on title and edit title. Also rename the worksheet name at the bottom to “Population pyramid by planning area”"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "href": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html",
    "title": "Take Home Exercise 2",
    "section": "",
    "text": "In this take-home exercise, I will critic one of the Take-home Exercise 1 prepared by classmate in terms of clarity and aesthetics, and propose a remake using data visualisation design principles and best practices in lesson 1 & 2.\nThe data set used for this exercise is downloaded from Popoulation Trend Data, DoSS, and I will remake the original design by using ggplot2, ggplot2 extensions and tidyverse packages in Rstudio."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#pareto-chart",
    "href": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#pareto-chart",
    "title": "Take Home Exercise 2",
    "section": "3.1 Pareto Chart",
    "text": "3.1 Pareto Chart\n\nPareto chart is used to illustrate the overall population of Singapore residents by planning area, and how much percentage that the top 9 planning areas represent. It gives a good idea on the significance of top populated areas within Singapore."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#age-sex-population-pyramid",
    "href": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#age-sex-population-pyramid",
    "title": "Take Home Exercise 2",
    "section": "3.2 Age-Sex Population Pyramid",
    "text": "3.2 Age-Sex Population Pyramid\n\nWe keep the age-sex populated pyramid, but will improve in terms of the aesthetics and clarity. The key focus will be put on identifying the difference of planning area against the overall Singapore population."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#getting-ready",
    "href": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#getting-ready",
    "title": "Take Home Exercise 2",
    "section": "4.1 Getting ready",
    "text": "4.1 Getting ready\nInstalling Packages\nI use tidyverse package which includes ggplot2, dplyr, tidyr and readr for this makeover exercise. The code chunk below uses p_load() of pacman package to check if tidyverse packages is installed in the computer. If yes, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#import-data",
    "href": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#import-data",
    "title": "Take Home Exercise 2",
    "section": "4.2 Import Data",
    "text": "4.2 Import Data\nData set named “respopagesextod2022” is used for the exercise below. Data is import using readr package.\n\npop_data <- read_csv(\"data/respopagesextod2022.csv\")\nhead(pop_data)\n\n# A tibble: 6 × 7\n  PA         SZ                     AG     Sex   TOD                   Pop  Time\n  <chr>      <chr>                  <chr>  <chr> <chr>               <dbl> <dbl>\n1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 1- and 2-Room …     0  2022\n2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 3-Room Flats       10  2022\n3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 4-Room Flats       10  2022\n4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 5-Room and Exe…    30  2022\n5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HUDC Flats (exclud…     0  2022\n6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Condominiums and O…    50  2022"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-wrangling",
    "href": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-wrangling",
    "title": "Take Home Exercise 2",
    "section": "4.3 Data Wrangling",
    "text": "4.3 Data Wrangling\n\nCompute cumulative percentage by planning area\nBelow code chunk is used to calculate total population of Singapore\n\ngrandpop <- as.numeric(sum(pop_data$Pop))\ngrandpop\n\n[1] 4081540\n\n\nBelow code chunk is used to calculate the cumulative population percentage of each planning area\n\ntotal_pop <- pop_data %>%\n  group_by(PA) %>%\n  summarise(totalpop = sum(Pop)) %>%\n  mutate(grandpop=grandpop) %>%\n  arrange(desc(totalpop)) %>%\n  mutate(percpop = totalpop/grandpop) %>%\n  mutate(cumpop = cumsum(percpop)) %>%\n  mutate(cumabspop = cumsum(totalpop))\nhead(total_pop)\n\n# A tibble: 6 × 6\n  PA          totalpop grandpop percpop cumpop cumabspop\n  <chr>          <dbl>    <dbl>   <dbl>  <dbl>     <dbl>\n1 Bedok         278640  4081540  0.0683 0.0683    278640\n2 Tampines      265690  4081540  0.0651 0.133     544330\n3 Jurong West   258540  4081540  0.0633 0.197     802870\n4 Sengkang      253120  4081540  0.0620 0.259    1055990\n5 Woodlands     252510  4081540  0.0619 0.321    1308500\n6 Hougang       227540  4081540  0.0557 0.376    1536040"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#plot-pareto-chart",
    "href": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#plot-pareto-chart",
    "title": "Take Home Exercise 2",
    "section": "4.4 Plot Pareto Chart",
    "text": "4.4 Plot Pareto Chart\nPareto chart was plotted using ggplot2 as follows:\n\nggplot(data = total_pop, aes(x = reorder(PA, -totalpop))) +\n  geom_col(aes(y=totalpop), fill = 'lightblue', width= 0.8) +\n  geom_point(aes(y=cumpop*278640), color = 'grey20', size = 0.8) +\n  geom_line(aes(y=cumpop*278640, group = 1), colour = 'grey20', size = 0.4) +\n  labs(x = \"Planning Area\", title = \"Pareto Chart of population by planning area\") +\n  scale_y_continuous(\n    name = 'Population', breaks = seq(0, 300000, 50000), minor_breaks = seq(0, 300000, 50000),\n    sec.axis = sec_axis(~.*1/278640, name = 'Cumulative Percentage of Population', breaks = seq(0, 1, by = 0.1), labels = scales::percent)\n)\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#plot-age-sex-population-pyramid",
    "href": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#plot-age-sex-population-pyramid",
    "title": "Take Home Exercise 2",
    "section": "4.5 Plot Age-Sex Population Pyramid",
    "text": "4.5 Plot Age-Sex Population Pyramid"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#pareto-chart-1",
    "href": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#pareto-chart-1",
    "title": "Take Home Exercise 2",
    "section": "4.3 Pareto Chart",
    "text": "4.3 Pareto Chart\n\n4.3.1 Data Wrangling\n\n\nCompute cumulative percentage by planning area\nBelow code chunk is used to calculate total population of Singapore\n\ngrandpop <- as.numeric(sum(pop_data$Pop))\n\nBelow code chunk is used to calculate the cumulative population percentage of each planning area. It filters all the 0 in population, group the data by planning area and summarize the population, and then create a new column for total population, which later sort into descending order and calculate the cumulative percentage of total population.\n\ntotal_pop <- pop_data %>%\n  filter(Pop != 0) %>%\n  group_by(PA) %>%\n  summarise(totalpop = sum(Pop)) %>%\n  mutate(grandpop=grandpop) %>%\n  arrange(desc(totalpop)) %>%\n  mutate(percpop = totalpop/grandpop) %>%\n  mutate(cumpop = cumsum(percpop)) %>%\n  mutate(cumabspop = cumsum(totalpop))\nhead(total_pop)\n\n# A tibble: 6 × 6\n  PA          totalpop grandpop percpop cumpop cumabspop\n  <chr>          <dbl>    <dbl>   <dbl>  <dbl>     <dbl>\n1 Bedok         278640  4081540  0.0683 0.0683    278640\n2 Tampines      265690  4081540  0.0651 0.133     544330\n3 Jurong West   258540  4081540  0.0633 0.197     802870\n4 Sengkang      253120  4081540  0.0620 0.259    1055990\n5 Woodlands     252510  4081540  0.0619 0.321    1308500\n6 Hougang       227540  4081540  0.0557 0.376    1536040\n\n\n\n\n4.3.2 Plot Pareto Chart\nPareto chart shows the population of planning area in descending order and cumulative percentage. This is to illustrate which are the top populated areas in Singapore and identify the most significant area for later analysis. Pareto chart was plotted using ggplot2 as follows:\n\ngeom_col() is used to create the bars and color and width is adjust for neater look\ngeom_point() & geom_line is used to plot the line for cumulative percentage\nscale_y_continuous is used for to create secondary axis for the cumulative percentage of population\ntheme() is adjusted to standardize axis text and title for neater look\n\n\nggplot(data = total_pop, aes(x = reorder(PA, -totalpop))) +\n  geom_col(aes(y=totalpop), fill = 'lightblue', width= 0.8) +\n  geom_point(aes(y=cumpop*278640), color = 'grey20', linewidth = 0.8) +\n  geom_line(aes(y=cumpop*278640, group = 1), colour = 'grey20', size = 0.4) +\n  labs(x = \"Planning Areas\", title = \"Pareto chart of population by planning area\") +\n  scale_y_continuous(\n    name = 'Population', breaks = seq(0, 300000, 50000), minor_breaks = seq(0, 300000, 50000),\n    sec.axis = sec_axis(~.*1/278640, name = 'Cumulative Percentage of Population', breaks = seq(0, 1, by = 0.1), labels = scales::percent) \n) +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1), plot.title = element_text(hjust = 0.5))"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#age-sex-population-pyramid-1",
    "href": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#age-sex-population-pyramid-1",
    "title": "Take Home Exercise 2",
    "section": "4.4 Age-Sex Population Pyramid",
    "text": "4.4 Age-Sex Population Pyramid\nA sex-age population pyramid shows the distribution of population by age groups and sex, which can be used to visualize the overall structure of a particular population. The shape of the pyramid can be used to indicate the reproductive capabilities and likelihood of continuation of a species. Our target is to show the population structure of top 9 populated planning area in one single view.\n\n4.4.1 Data Wrangling\n\n\nCompute the population percentage by age and sex\nWe are going to compute the percentage of particular planning area population by gender and age. Below are the codes to transform the data.\n\nSummarize population by planning area, sex and age group and rearrange the order of age group\n\n\norder <- c(\"0_to_4\", \"5_to_9\", \"10_to_14\", \"15_to_19\", \"20_to_24\", \"25_to_29\", \"30_to_34\", \"35_to_39\", \"40_to_44\", \"45_to_49\", \"50_to_54\", \"55_to_59\", \"60_to_64\", \"65_to_69\", \"70_to_74\", \"75_to_79\", \"80_to_84\", \"85_to_89\", \"90_and_over\")\n\npyramid <- pop_data %>%\n  filter(Pop != 0) %>%\n  mutate(AG =  factor(AG, levels = order)) %>%\n  arrange(AG) %>%\n  group_by(PA, Sex, AG) %>%\n  summarise(pymd_pop = sum(Pop)) %>%\n  mutate(grandpop=grandpop)\nhead(pyramid)\n\n# A tibble: 6 × 5\n# Groups:   PA, Sex [1]\n  PA         Sex     AG       pymd_pop grandpop\n  <chr>      <chr>   <fct>       <dbl>    <dbl>\n1 Ang Mo Kio Females 0_to_4       2480  4081540\n2 Ang Mo Kio Females 5_to_9       3120  4081540\n3 Ang Mo Kio Females 10_to_14     3320  4081540\n4 Ang Mo Kio Females 15_to_19     3620  4081540\n5 Ang Mo Kio Females 20_to_24     4030  4081540\n6 Ang Mo Kio Females 25_to_29     5020  4081540\n\n\n\nCalculate the total population by planning area\n\n\ntotal_pop_PA <- total_pop |> select(PA, totalpop)\n\n\nJoin the two data frame to form a data set with population by planning area and population by planning area, age group and sex. Calculate the percentage with the two columns.\nCreate a data frame for the overall population\n\n\njoined_tab <- left_join(pyramid, total_pop_PA,\n                        by = c('PA' = 'PA')) %>%\n  mutate(pymd_pop_perc = pymd_pop/totalpop)\n\ntopdata <- top_n(total_pop_PA, n=9, totalpop)\n\n\nPrepare data for the overall population pyramid by grouping data by sex and age, and summarize the population\n\n\noverall_pyramid <- pop_data %>%\n  filter(Pop != 0) %>%\n  mutate(AG =  factor(AG, levels = order)) %>%\n  arrange(AG) %>%\n  group_by(Sex, AG) %>%\n  summarise(pymd_pop = sum(Pop)) %>%\n  mutate(totalpop=grandpop)\n\n\n\n4.4.2 Plot Population Pyramid in Trellis View\nThe population pyramid was plot using ggplot as follows:\n\ngeom_col() was used to create the bar chart, and ifelse() is used to convert male population percentage to the left of the graph and female to the right.\nFormula of pymd_pop/totalpop is used to calculate the population percentage for each age group and sex.\nThe color and format of overall population pyramid is adjusted to lighter grey for easier reading\nlabs() was used to assign main title and axis titles.\nscale_x_continuous() is used to tidy up the the x axis label for clarity\ntheme() is used to adjust font size and position for neater look\n\n\nd <- joined_tab %>% filter(PA %in% topdata$PA)\n\nggplot(d, aes(x = ifelse(Sex == \"Males\", yes = -(pymd_pop/totalpop), no = pymd_pop/totalpop), y = AG, fill = Sex)) + \n                          geom_col(data = overall_pyramid, fill = 'grey') + \n                          geom_col(color = \"black\", alpha = .5) +\n                          facet_wrap(~ PA) +\n  labs (x = \"Population percentage\", y = \"Age\", title='Singapore Age-Sex Population Pyramid by Planning Area in Jun 2022') +\n  scale_x_continuous(breaks = seq(-0.06, 0.06, 0.02), labels = abs(seq(-0.06, 0.06, 0.02))) +\n  theme_bw() +\n  theme(axis.ticks.y = element_blank(),\n        plot.title = element_text(hjust = 0.5, size = 22),\n        axis.title = element_text(size = 14),\n        strip.text = element_text(size = 14))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "href": "In-class_Ex/In-class_Ex03/In-class_Ex03.html",
    "title": "In-class Exercise 3",
    "section": "",
    "text": "Installing and loading R packages\nTwo packages will be installed and loaded. They are: tidyverse, ggiraph.\n\npacman::p_load(ggiraph, tidyverse)\n\nImporting data\n\nexam_data <- read_csv(\"data/Exam_data.csv\")\n\nStatic chart\n\nggplot(data = exam_data,\n       aes(x = MATHS))+\n  geom_dotplot(dotsize = 0.5)\n\n\n\n\nInteractive chart\nhttps://davidgohel.github.io/ggiraph/\n\np <- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-insights",
    "href": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#data-insights",
    "title": "Take Home Exercise 2",
    "section": "4.5 Data Insights",
    "text": "4.5 Data Insights\n\nWith the new Pareto chart, we are able to identify the top 9 populated areas in Singapore, which make up on more than 50% of total Singapore population\nWith the remake Age-Sex pyramid, we can observe more patterns from different planning area:\n\nPunggol and Tampines have very different age-sex pattern with the overall Singapore population and the rest of the planning areas\nJurong West has a similar age-sex pattern with overall population\nSengkang, Punggol and Tampines have relatively higher younger population\nHougang, Jurong West and Bedok has more 60 years or above population"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#aesthetics-1",
    "href": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#aesthetics-1",
    "title": "Take Home Exercise 2",
    "section": "Aesthetics",
    "text": "Aesthetics\n\nWhen there is multiple chart of elements on the same graph, it is important to adjust the color of the chart to shows what is the primary information (planning area population) and secondary information (overall population)\nColor should be used to contrast important information and should be used carefully\nSimple background is preferred when there are multiple graphs in the same view"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#clarity-1",
    "href": "Take-home_Ex/Take-Home_Ex02/Take-Home_Ex02.html#clarity-1",
    "title": "Take Home Exercise 2",
    "section": "Clarity",
    "text": "Clarity\n\nSome insights might be lost if we group data unnecessarily, for example the age group pattern will be lost if we group the different age groups together\nNot all data labels should be shown, sometimes simple is beauty\nData comparison is a good way to draw additional insights in our graphs, for example we compare overall population with planning area population for more insights\nData visualisation is about trial and error. Sometimes you have to go through many iteration in order to have the best outcome. It is important to be patient during the process."
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html",
    "title": "In-Class Exercise 4",
    "section": "",
    "text": "pacman::p_load(plotly, DT, patchwork, ggstatsplot, tidyverse)\n##plot_ly method"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#ggplotly-method",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#ggplotly-method",
    "title": "In-Class Exercise 4",
    "section": "ggplotly() method",
    "text": "ggplotly() method\n\np <- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(dotsize = 1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,\n                         100))\nggplotly(p)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#ggstatsplot",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#ggstatsplot",
    "title": "In-Class Exercise 4",
    "section": "ggstatsplot",
    "text": "ggstatsplot\n\npacman::p_load(ggstatsplot, tidyverse)\n\n\nggbetweenstats(\n  data = exam_data,\n  x = GENDER, \n  y = MATHS,\n  type = \"p\",\n  messages = FALSE\n)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-models",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualising-models",
    "title": "In-Class Exercise 4",
    "section": "Visualising models",
    "text": "Visualising models\n\npacman::p_load(readxl, performance, parameters, see, gtsummary)\n\n\ncar_resale <- read_xls(\"data/ToyotaCorolla.xls\", \n                       \"data\")\ncar_resale\n\n# A tibble: 1,436 × 38\n      Id Model       Price Age_0…¹ Mfg_M…² Mfg_Y…³     KM Quart…⁴ Weight Guara…⁵\n   <dbl> <chr>       <dbl>   <dbl>   <dbl>   <dbl>  <dbl>   <dbl>  <dbl>   <dbl>\n 1    81 TOYOTA Cor… 18950      25       8    2002  20019     100   1180       3\n 2     1 TOYOTA Cor… 13500      23      10    2002  46986     210   1165       3\n 3     2 TOYOTA Cor… 13750      23      10    2002  72937     210   1165       3\n 4     3  TOYOTA Co… 13950      24       9    2002  41711     210   1165       3\n 5     4 TOYOTA Cor… 14950      26       7    2002  48000     210   1165       3\n 6     5 TOYOTA Cor… 13750      30       3    2002  38500     210   1170       3\n 7     6 TOYOTA Cor… 12950      32       1    2002  61000     210   1170       3\n 8     7  TOYOTA Co… 16900      27       6    2002  94612     210   1245       3\n 9     8 TOYOTA Cor… 18600      30       3    2002  75889     210   1245       3\n10    44 TOYOTA Cor… 16950      27       6    2002 110404     234   1255       3\n# … with 1,426 more rows, 28 more variables: HP_Bin <chr>, CC_bin <chr>,\n#   Doors <dbl>, Gears <dbl>, Cylinders <dbl>, Fuel_Type <chr>, Color <chr>,\n#   Met_Color <dbl>, Automatic <dbl>, Mfr_Guarantee <dbl>,\n#   BOVAG_Guarantee <dbl>, ABS <dbl>, Airbag_1 <dbl>, Airbag_2 <dbl>,\n#   Airco <dbl>, Automatic_airco <dbl>, Boardcomputer <dbl>, CD_Player <dbl>,\n#   Central_Lock <dbl>, Powered_Windows <dbl>, Power_Steering <dbl>,\n#   Radio <dbl>, Mistlamps <dbl>, Sport_Model <dbl>, Backseat_Divider <dbl>, …\n\n\n\nmodel <- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01  \n\n\nCan use tbl_summary for saving as dataframe\nhttps://www.danieldsjoberg.com/gtsummary/articles/tbl_summary.html\n\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\nAge_08_04 and Mfg_yr are highly correlated\n\nmodel1 <- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\n\ncheck_n <- check_normality(model1)\nplot(check_n)\n\n\n\n\n\ntbl_regression(model1,\n               intercept = TRUE)\n\n\n\n\n\n  \n  \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n-2,186\n-4,093, -278\n0.025\n    Age_08_04\n-119\n-125, -114\n<0.001\n    KM\n-0.02\n-0.03, -0.02\n<0.001\n    Weight\n20\n18, 21\n<0.001\n    Guarantee_Period\n27\n2.1, 52\n0.034\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\n\ncheck_model(model1)\n\n\n\n\n\nVisualise parameters of a regression model\n\nplot(parameters(model1))\n\n\n\n\n\nggcoefstats(model,\n            output = 'plot')"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualize-uncertainty",
    "href": "In-class_Ex/In-class_Ex04/In-class_Ex04.html#visualize-uncertainty",
    "title": "In-Class Exercise 4",
    "section": "Visualize uncertainty",
    "text": "Visualize uncertainty\nggdist\nhttps://mjskay.github.io/ggdist/reference/index.html\n\npacman::p_load(tidyverse, plotly, crosstalk, DT, ggdist, gganimate)\n\n\nexam <- read_csv(\"data/Exam_data.csv\")\n\n\nVisualize using ggplot2\n\nmy_sum <- exam %>%\n  group_by(RACE) %>%\n  summarise(\n    n=n(),\n    mean=mean(MATHS),\n    sd=sd(MATHS)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n   geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          maths score by race\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-Corrgram.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-Corrgram.html",
    "title": "Hands on Exercise 5 - Corrgram",
    "section": "",
    "text": "Installing and Launching R Packages\n\npacman::p_load(corrplot, tidyverse, ggstatsplot, ggcorrplot)\n\nImport data\n\nwine <- read_csv(\"data/wine_quality.csv\")\n\nBasic correlation matrix - 11 by 11 matrix\n\npairs(wine[,1:11])\n\n\n\n\ninput pairs() can be matrix or data frame\nBasic correlation matrix for col 2 to 12\n\npairs(wine[,2:12])\n\n\n\n\nCustomize: Drawing the lower corner\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\npairs(wine[,2:12], lower.panel = NULL)\n\n\n\n\nIncluding with correlation coefficient\n\npanel.cor <- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr <- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr <- abs(cor(x, y, use=\"complete.obs\"))\ntxt <- format(c(r, 0.123456789), digits=digits)[1]\ntxt <- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)\n\n\n\n\nVisual correlation matrix: ggcormat()\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11)\n\n\n\n\nAdding title\n\n\n\n\n\nMultiple plots\n\n\n\n\n\nCorrplot\n\nwine.cor <- cor(wine[, 1:11])\n\n\ncorrplot(wine.cor)\n\n\n\n\nEllipse\n\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\nCustomize layout\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\")\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.col = \"black\")\n\n\n\n\nMixed layout - corrplot.mix()\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\nCombine corrgram with significant test\n\nwine.sig = cor.mtest(wine.cor, conf.level= .95)\n\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05)\n\n\n\n\nReorder a corrgram\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")\n\n\n\n\nReorder correlation matrix using hclust\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-Ternary.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-Ternary.html",
    "title": "Hands on Exercise - Ternary plot",
    "section": "",
    "text": "Load package\n\npacman::p_load(ggtern, plotly, tidyverse)\n\n\npop_data <- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\nPrepare the data - mutate() and dplyr()\n\nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  spread(AG, Population) %>% #can use pivot_wide instead\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n\nPlotting Static Ternary diagram\n\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\nFormatting\n\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\nInteractive ternary diagram\n\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-Heatmap.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-Heatmap.html",
    "title": "Hands on Exercise - heatmap",
    "section": "",
    "text": "Load package and data\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)\n\n\nwh <- read_csv(\"data/WHData-2018.csv\")\n\nPrepare and transform data\n\nrow.names(wh) <- wh$Country\n#replace row number by country name for heatmaply to label\n\nTransform data frame into matrix\n\nwh1 <- dplyr::select(wh, c(3, 7:12))\nwh_matrix <- data.matrix(wh)\n\nStatic Heatmap\n\nwh_heatmap <- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\nheatmaply\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)])\n\n\n\n\n\nTransform the data by scaling - scaling to bring them close to normal distribution\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\nNormalising method\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\nPercentising method\n\nheatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\nFinishing touch\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-Parallel.html",
    "href": "Hands-on_Ex/Hands-on_Ex05/Hands-on_Ex05-Parallel.html",
    "title": "Hands on Exercise - Parallel plot",
    "section": "",
    "text": "Load package and data\n\npacman::p_load(GGally, parallelPlot, tidyverse)\n\n\nwh <- read_csv(\"data/WHData-2018.csv\")\n\nPlot smiple parallel cordinates\n\nggparcoord(data = wh, \n           columns = c(7:12))\n\n\n\n\nWith Boxplot\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of World Happines Variables\")\n\n\n\n\nFacet\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region)\n\n\n\n\nRotating X axis text label with themes\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n##Interactive\nBasic plot - parallelPlot()\n\nwh <- wh %>%\n  select(\"Happiness score\", c(7:12))\nparallelPlot(wh,\n             width = 320,\n             height = 250)\n\n\n\n\n\nRotate axis label\n\nparallelPlot(wh,\n             rotateTitle = TRUE)\n\n\n\n\n\nParallel coordinates plot with histogram\n\nhistoVisibility <- rep(TRUE, ncol(wh))\nparallelPlot(wh,\n             rotateTitle = TRUE,\n             histoVisibility = histoVisibility)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05-Corrgram.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05-Corrgram.html",
    "title": "In class Exercise 5 - Corrgram",
    "section": "",
    "text": "Installing and Launching R Packages\n\npacman::p_load(corrplot, tidyverse, ggstatsplot, ggcorrplot)\n\nImport data\n\nwine <- read_csv(\"data/wine_quality.csv\")\n\nBasic correlation matrix - 11 by 11 matrix\n\npairs(wine[,1:11])\n\n\n\n\ninput pairs() can be matrix or data frame\nBasic correlation matrix for col 2 to 12\n\npairs(wine[,2:12])\n\n\n\n\nCustomize: Drawing the lower corner\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\n\npairs(wine[,2:12], lower.panel = NULL)\n\n\n\n\nIncluding with correlation coefficient\n\npanel.cor <- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr <- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr <- abs(cor(x, y, use=\"complete.obs\"))\ntxt <- format(c(r, 0.123456789), digits=digits)[1]\ntxt <- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)\n\n\n\n\nVisual correlation matrix: ggcormat()\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11)\n\n\n\n\nAdding title\n\n\n\n\n\nMultiple plots\n\n\n\n\n\nCorrplot\n\nwine.cor <- cor(wine[, 1:11])\n\n\ncorrplot(wine.cor)\n\n\n\n\nEllipse\n\ncorrplot(wine.cor, \n         method = \"ellipse\") \n\n\n\n\nCustomize layout\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\")\n\n\n\n\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"lower\",\n         diag = FALSE,\n         tl.col = \"black\")\n\n\n\n\nMixed layout - corrplot.mix()\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\")\n\n\n\n\nCombine corrgram with significant test\n\nwine.sig = cor.mtest(wine.cor, conf.level= .95)\n\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05)\n\n\n\n\nReorder a corrgram\n\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order=\"AOE\",\n               tl.col = \"black\")\n\n\n\n\nReorder correlation matrix using hclust\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05-Heatmap.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05-Heatmap.html",
    "title": "In Class Exercise 5 - heatmap",
    "section": "",
    "text": "Load package and data\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)\n\n\nwh <- read_csv(\"data/WHData-2018.csv\")\n\nPrepare and transform data\n\nrow.names(wh) <- wh$Country\n#replace row number by country name for heatmaply to label\n\nTransform data frame into matrix\n\nwh1 <- dplyr::select(wh, c(3, 7:12))\nwh_matrix <- data.matrix(wh)\n\nStatic Heatmap\n\nwh_heatmap <- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\nheatmaply\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)])\n\n\n\n\n\nTransform the data by scaling - scaling to bring them close to normal distribution\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\nNormalising method\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\nPercentising method\n\nheatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\nFinishing touch\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Blues,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05-Parallel.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05-Parallel.html",
    "title": "In Class Exercise 5 - Parallel plot",
    "section": "",
    "text": "Load package and data\n\npacman::p_load(GGally, parallelPlot, tidyverse)\n\n\nwh <- read_csv(\"data/WHData-2018.csv\")\n\nPlot smiple parallel cordinates\n\nggparcoord(data = wh, \n           columns = c(7:12))\n\n\n\n\nWith Boxplot\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of World Happines Variables\")\n\n\n\n\nFacet\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region)\n\n\n\n\nRotating X axis text label with themes\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n##Interactive\nBasic plot - parallelPlot()\n\nwh <- wh %>%\n  select(\"Happiness score\", c(7:12))\nparallelPlot(wh,\n             width = 320,\n             height = 250)\n\n\n\n\n\nRotate axis label\n\nparallelPlot(wh,\n             rotateTitle = TRUE)\n\n\n\n\n\nParallel coordinates plot with histogram\n\nhistoVisibility <- rep(TRUE, ncol(wh))\nparallelPlot(wh,\n             rotateTitle = TRUE,\n             histoVisibility = histoVisibility)"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex05/In-class_Ex05-Ternary.html",
    "href": "In-class_Ex/In-class_Ex05/In-class_Ex05-Ternary.html",
    "title": "In Class Exercise 5 - Ternary plot",
    "section": "",
    "text": "Load package\n\npacman::p_load(ggtern, plotly, tidyverse)\n\n\npop_data <- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\nPrepare the data - mutate() and dplyr()\n\nagpop_mutated <- pop_data %>%\n  mutate(`Year` = as.character(Year))%>%\n  spread(AG, Population) %>% #can use pivot_wide instead\n  mutate(YOUNG = rowSums(.[4:8]))%>%\n  mutate(ACTIVE = rowSums(.[9:16]))  %>%\n  mutate(OLD = rowSums(.[17:21])) %>%\n  mutate(TOTAL = rowSums(.[22:24])) %>%\n  filter(Year == 2018)%>%\n  filter(TOTAL > 0)\n\nPlotting Static Ternary diagram\n\nggtern(data=agpop_mutated,aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point()\n\n\n\n\nFormatting\n\nggtern(data=agpop_mutated, aes(x=YOUNG,y=ACTIVE, z=OLD)) +\n  geom_point() +\n  labs(title=\"Population structure, 2015\") +\n  theme_rgbw()\n\n\n\n\nInteractive ternary diagram\n\nlabel <- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"white\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\naxis <- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes <- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"black\"), \n  type = \"scatterternary\"\n) %>%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "href": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html",
    "title": "Take Home Exercise 3",
    "section": "",
    "text": "The purpose of the exercise is to uncover the salient patterns of resale prices of public housing property by residential towns and estates in Singapore. I will use select appropriate analytical visualisation techniques to discover the similarity and difference of data pattern for 3-Room, 4-Room and 5-Room flats. The study period is base on 2022 resale data that is available on data.gov.sg named “resale-flat-prices-based-on-registration-date-from-jan-2017-onwards”."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#visualization-tool-selection",
    "href": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#visualization-tool-selection",
    "title": "Take Home Exercise 3",
    "section": "2. Visualization Tool Selection",
    "text": "2. Visualization Tool Selection\nIn this exercise, I will apply different univariate graphical method and bivariate method and appropriate statistical testing to discover housing price pattern of different flat type and geographic location.\n\nUnivariate Graphic EDA\n\n1) Histogram on housing prices distribution:\nThis is to discover if the housing prices and transactions are normally distributed. I will build a static chart to reveal the distribution, and interactive charts to unveal more information, and statistical test on normal distribution.\n\n\n\nMultivariate Graphic EDA\n\n2) Boxplot\nThis is to discover the different means and percentile of housing prices for different independent categorical variable such as room type, flat model and geographic location. I will use boxplot and statistical method such as Oneway ANOVA to prove the hypothesis if different group shares the same mean and pattern.\na) Compare resale flat prices for 3-Room, 4-Room and 5-Room flat\nb) Compare resale flat prices between different town\nc) Compare resale flat prices between different flat model\n\n\n3) Correlation Analysis\nThis is to discover the relationship of housing prices and independent continuous variable such as house size and lease years. I will use scatterplot and calculate the correlation between the two variables.\na) Floor sq vs resale flat price per sqm\nb) Remaining lease years vs resale flat price per sqm\n\n\n\nOther Analysis\nI will use Mosaic plot to show the relationship of different categorical variables (such as X & Y) to discover more insights on the housing patterns."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#step-by-step-procedures",
    "href": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#step-by-step-procedures",
    "title": "Take Home Exercise 3",
    "section": "3. Step by Step Procedures",
    "text": "3. Step by Step Procedures\n\n3.1 Getting Ready\nIn this exercise, ggstatplot, plotly and tidyverse will be used.\n\npacman::p_load(ggstatsplot, plotly, tidyverse)\n\n\n\n3.2 Import data\nresale-flat-prices-jan2017.csv data is imported using tidyverse package\n\nflat_data <- read_csv(\"data/resale-flat-prices-jan2017.csv\")\n\n\n\n3.3 Data Transformation\nIn this exercise, we will only focus on 3-room, 4-room and 5-room flat as they share similar characteristic, the study period is 2022. Below code chunk help us to filter the selected data.\n\nfilter_data <- flat_data %>%\n  filter(flat_type %in% c(\"3 ROOM\", \"4 ROOM\", \"5 ROOM\")) %>%\n  filter(str_detect(month,\"2022\"))\n\nI also need to transform the resale price to resale price per sqm for fair comparison In the below code chunk, I created a new attributes called resale_price_per_sqm.\n\nnew_flat_data <- filter_data %>%\n  mutate(resale_price_per_sqm = resale_price/floor_area_sqm)\n\nIn the code chunk below, I transform the char string in remaining_lease to numbers, capturing the remaining lease years for the later correlation analysis.\n\nnew_flat_data <- new_flat_data|>\n  mutate(remaining_lease_years = parse_number(remaining_lease))\n\n\n\n3.3 Histogram\n\n3.3.1 Static Histogram\nIn the code chunk below, ggplot2 is used to build a histogram for “Distribution of Resale Flat Price” with mean resale flat price per sqm plotted as the X intercept.\n\nm = mean(new_flat_data$resale_price_per_sqm)\n\nggplot(data=new_flat_data, \n             aes(x = resale_price_per_sqm)) +\n  geom_histogram(bins=50, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  geom_vline(aes(xintercept = mean(resale_price_per_sqm))) + \n  ggtitle(\"Distribution of Resale Flat Price Per SQM\")\n\n\n\n\n\n\n3.3.2 Interactive\nIn the code chunk below, ggplot2 is used to build a histogram for “Distribution of Resale Flat Price” using plotly. We color the bars with different room type to discover if there are different patterns.\n\nplot_ly(data = new_flat_data, \n        x = ~resale_price_per_sqm, \n        color = ~flat_type)\n\n\n\n\n\n\n\n3.3.3 One-sample test for normal distribution\nIn the code chunk below, gghistostats() is used to build a visual of one-sample test on housing prices.\n\nset.seed(1234)\n\ngghistostats(\n  data = new_flat_data,\n  x = resale_price_per_sqm,\n  type = \"bayes\",\n  test.value = 100,\n  xlab = \"HDB flat resale price\"\n)\n\n\n\n\nIt shows an abecadotal evidence for alternative hypothesis according to Bayes Factor, which suggest the resale flat price is not normally distributed.\n\n\n\n3.4 Boxplot\n\n3.4.1 Mean resale flat price for different room type\nIn the code chunk below, geom_boxplot() is used to display the distribution of different room types (3-Room, 4-Room and 5-Room). For easier reading, the Y axis value are format in $K unit\n\nggplot(new_flat_data, aes(x = flat_type, y = resale_price_per_sqm)) +\n  geom_boxplot() +\n  scale_y_continuous(\n    labels = scales::label_dollar(scale = 1/1000, suffix = \"K\"),\n    breaks = seq(2000, 20000, by = 2000)) +\n  ggtitle(\"Mean Comparison for Different Flat Type\")\n\n\n\n\nAs the means and the data pattern for the 3 types of room looks the same, below code chunk is used to create a visual statistic testing to prove if different flat types share the same mean with Oneway ANOVA test using ggbetweenstats() method.\n\nggbetweenstats(\n  data = new_flat_data,\n  x = flat_type, \n  y = resale_price_per_sqm,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\nFrom the analysis above, we an see the result is significant which statistically prove that different flat types share the same mean resale price per sqm.\n\n\n3.4.2 Mean resale flat price for different town\nIn the code chunk below, boxplot of flat price for different town are displayed for comparison. For easier reading, the Y axis value are format in $K unit and X axis title are rotated 90 degree.\n\nggplot(new_flat_data, aes(x = town, y = resale_price_per_sqm)) +\n  geom_boxplot() +\n  scale_y_continuous(\n    labels = scales::label_dollar(scale = 1/1000, suffix = \"K\"),\n    breaks = seq(2000, 20000, by = 2000)) +\n  ggtitle(\"Mean Comparison of Resale Flat Price per sqm for Different Town\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1), plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n3.4.3 Mean resale flat price for different flat type\nIn the code chunk below, boxplot of flat price for flat models are displayed for comparison. For easier reading, the Y axis value are format in $K unit and X axis title are rotated 90 degree.\n\nggplot(new_flat_data, aes(x = flat_model, y = resale_price_per_sqm)) +\n  geom_boxplot() +\n  scale_y_continuous(\n    labels = scales::label_dollar(scale = 1/1000, suffix = \"K\"),\n    breaks = seq(2000, 20000, by = 2000)) +\n  ggtitle(\"Mean Comparison of Resale Flat Price per sqm for Flat model\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1), plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n3.4.4 Mean resale flat price for different storey\nIn the code chunk below, boxplot of flat price for different storey range are displayed for comparison. For easier reading, the Y axis value are format in $K unit and X axis title are rotated 90 degree.\n\nggplot(new_flat_data, aes(x = storey_range, y = resale_price_per_sqm)) +\n  geom_boxplot() +\n  scale_y_continuous(\n    labels = scales::label_dollar(scale = 1/1000, suffix = \"K\"),\n    breaks = seq(2000, 20000, by = 2000)) +\n  ggtitle(\"Mean Comparison of Resale Flat Price per sqm for Storey Range\") +\n  theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust=1), plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n3.5 Scatterplot\n\n3.5.1 Relationship between floor area and resale price per sqm\nIn the code chunk below, a scatterplot is built using ggplot2 with floor area and resale price per sqm on X & Y axis to visualize the relationship between two variables.\n\nggplot(data = new_flat_data,\n       aes(x = floor_area_sqm, y = resale_price_per_sqm)) +\n  geom_point() +\n  geom_smooth(size = 1)\n\n\n\n\nFrom the graph above, outliers from sqm = 150 and above has affected the correlation analysis. To generate more accurate result, I filter out data points for sqm = 150 and above\n\nfilter_new_flat_data <- new_flat_data %>%\n  filter(floor_area_sqm < 150)\n\nThe scatterplot is rerun using the filtered data. Chart title is added for easier reading.\n\nggplot(data = filter_new_flat_data,\n       aes(x = floor_area_sqm, y = resale_price_per_sqm)) +\n  geom_point() +\n  geom_smooth(size = 1) +\n  ggtitle(\"Correlation between Floor Areq sqm and Resale Price per sqm\")\n\n\n\n\nIn the code chunk below, scatterplot is built using ggscatterstats() to visualize the significant test of correlation between floor area and resale price per sqm with the filtered data\n\nggscatterstats(\n  data = filter_new_flat_data,\n  x = floor_area_sqm,\n  y = resale_price_per_sqm,\n  marginal = FALSE\n)\n\n\n\n\nThe above chart shows a p value < 0.05 and effect size = -0.12, which means there is a negligible negative correlation.\n\n\n3.5.2 Relationship between remaining lease years and resale price per sqm\nIn the code chunk below, a scatterplot is built using ggplot2 with remaining lease years and resale price per sqm on X & Y axis to visualize the relationship between two variables.\n\nggplot(data = new_flat_data,\n       aes(x = remaining_lease_years, y = resale_price_per_sqm)) +\n  geom_point() +\n  geom_smooth(size = 1)\n\n\n\n\nIn the code chunk below, scatterplot is built using ggscatterstats() to visualize the significant test of correlation between remaining years and resale price per sqm.\n\nggscatterstats(\n  data = new_flat_data,\n  x = remaining_lease_years,\n  y = resale_price_per_sqm,\n  marginal = FALSE\n)\n\n\n\n\nThe above chart shows a p value < 0.05 and effect size = 0.34, which means there is a weak positive correlation."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#data-insights",
    "href": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#data-insights",
    "title": "Take Home Exercise 3",
    "section": "4. Data Insights",
    "text": "4. Data Insights\n\n1) Overall housing price distribution\n\nIn the first histogram, it shows a bell-shaped curve which is positively skewed.\nThe mean of resale price is around $5000.\nAll different flat type (3-room, 4-room and 5-room) shared similar pattern.\nThe statistical test suggests the housing price is not normally distributed.\n\n\n\n2) Boxplot\n\nThe first boxplot suggests that average resale flat price is similar for different room type, which is statistically proven by the ANOVA test.\nThe second boxplot suggests that some area such as Central Area, Queenstown, Bukit Timah and Bukit Merah have a higher average resale flat price per sqm than other area.\nThe third boxplot suggests that some flat model such as Type S1 & Type S2, Premium Apartment Loft, Terrace and DBSS has a higher resale flat price per sqm.\nThe fourth boxplot suggests that higher storey range has a higher mean resale flat price per sqm.\nThese insights helps to explain what could be the possible driver that affects resale flat prices.\n\n\n\n3) Scatterplot\n\nThe first scatterplot shows a negligible negative correlation between floor area and resale flat price per sqm\nThe second scatterplot shows a weak positive correlation between remaining lease years and resale price per sqm\nThese correlation could be too weak to prove whether there is a correlation between floor area and remaining lease years and resale flat prices."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#learning",
    "href": "Take-home_Ex/Take-Home_Ex03/Take-Home_Ex03.html#learning",
    "title": "Take Home Exercise 3",
    "section": "5. Learning",
    "text": "5. Learning\nIn this exercise, I learn that we need to trial and error to find the best visualization for different type of data. For example, it won’t make sense if I use scatterplot for categorical data.\nI also learn that we can leverage on visualization to improve the accuracy of statistical analysis. For example, we can identify outlier through scatterplot, and remove the outlier before we conduct statistical testing.\nMoving on, I am interested to see what are visualization tools I can use to calibrate advanced analytics such as predictive models."
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#data-preparation",
    "href": "Take-home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#data-preparation",
    "title": "Take Home Exercise 4",
    "section": "2. Data Preparation",
    "text": "2. Data Preparation\n\n2.1 Getting Ready\nIn this exercise, I will use ggplot2 and its extension, tidyverse, gganimate and its extension\nPackage\ngganimate, CPGfunction (newggslopegraph), gifski_renderer()\n\npacman::p_load(ggstatsplot, plotly, gganimate, readxl, tidyverse)\n\n\n\n2.2 Import Data\nI use the below code chunk to extract the data from the selected excel spreadsheets and range, and store it as “Import_trade” and “Export_trade” data frame.\n\nImport_trade <- read_excel(\"data/merchandisetrade.xlsx\", sheet = \"T1\", range = \"A10:AL129\")\n\n\nExport_trade <- read_excel(\"data/merchandisetrade.xlsx\", sheet = \"T2\", range = \"A10:AL101\")\n\n\n\n2.3 Data Preparation\nThe dataframe is at a wider table format and it is not user-friendly for time-series analysis. The below code chunk transforms the data from wider to longer format.\n\nImport_trade2 <- pivot_longer(Import_trade, cols = 2:38, names_to = \"Month year\", values_to = \"Trade Value\" )\n\n\nExport_trade2 <- pivot_longer(Export_trade, cols = 2:38, names_to = \"Month year\", values_to = \"Trade Value\" )\n\n\nhead(Import_trade2)\n\n# A tibble: 6 × 3\n  `Data Series`                                `Month year` `Trade Value`\n  <chr>                                        <chr>                <dbl>\n1 Total Merchandise Imports (Thousand Dollars) 2023 Jan          44393664\n2 Total Merchandise Imports (Thousand Dollars) 2022 Dec          49869770\n3 Total Merchandise Imports (Thousand Dollars) 2022 Nov          50653907\n4 Total Merchandise Imports (Thousand Dollars) 2022 Oct          53182943\n5 Total Merchandise Imports (Thousand Dollars) 2022 Sep          55799312\n6 Total Merchandise Imports (Thousand Dollars) 2022 Aug          58466009\n\n\nI then join the two data frame to one data frame and create one column for import trade value and one column for export trade value in dollar value.\n\n# join two data and create \"import\" and \"export\" column\n\nThere are 4 columns within the dataframe. For more accurate description, I rename the first column as “Country”, remove the irrelevant text and the “total” row.\n\n# rename column name\n# remove \"thousand dollar\"\n# remove first row\n\nFor further analyzing time pattern, I further derive the time stamp to month and year\n\n# derive month, year from month year"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#data-visualisation",
    "href": "Take-home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#data-visualisation",
    "title": "Take Home Exercise 4",
    "section": "3. Data Visualisation",
    "text": "3. Data Visualisation\n\n3.1 Line graph\n\n# Line graph with overall import and export\n# Trellis line graph to show the top 10 trade countries\n\n\n\n3.2 Slope graph\n\n# slopegraph to shows the total trade volume changes for 2020 and 2022\n\n\n\n3.3 Horizon graph.\n\n\n\n\n\n3.4 Cycle plot\n\n# cycle plot to shows the month and year pattern for overall countries and selected countries\n\n\n\n3.5 Animated bubble plot\n\n# animated scatterplot with X = Import, Y = Export, size of bubble = overall trade"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#data-insights",
    "href": "Take-home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#data-insights",
    "title": "Take Home Exercise 4",
    "section": "4. Data Insights",
    "text": "4. Data Insights"
  },
  {
    "objectID": "Take-home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#learnings",
    "href": "Take-home_Ex/Take-Home_Ex04/Take-Home_Ex04.html#learnings",
    "title": "Take Home Exercise 4",
    "section": "5. Learnings",
    "text": "5. Learnings"
  }
]