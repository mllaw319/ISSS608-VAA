---
title: "In Class Exercise 7"
author: "Law Man Long"
date: "25 February 2023"
date-modified: "`r Sys.Date()`"
execute: 
  echo: true
  eval: true
  results: hide
  message: false
  warning: false
format: html
editor: visual
---

# Point System Map

## Getting started
sf = spatial data simplified
tmap = Interactive map features

```{r}
pacman::p_load(sf, tmap, tidyverse)
```

## Data import

```{r}
sgpools <- read_csv("data/aspatial/SGPools_svy21.csv")
```

## Creat sf data frame

coords = c("XCOORD", "YCOORD") <- need to start with X-coord
crs= 3414 <- represent EPSG:3414, only exist in SG
```{r}
sgpools_sf <- st_as_sf(sgpools, 
                       coords = c("XCOORD", "YCOORD"),
                       crs= 3414)
```


### Create an interactive point symbol map

```{r}
tmap_mode("view") #view <- interactive, plot <- static
tm_shape(sgpools_sf)+ #dataframe
tm_bubbles(col = "red",
           size = 1,
           border.col = "black",
           border.lwd = 1)
```
### proporitonal

```{r}
tm_shape(sgpools_sf)+
tm_bubbles(col = "red",
           size = "Gp1Gp2 Winnings",
           border.col = "black",
           border.lwd = 1)
### can change to openstreet map
```

### facet

```{r}
tm_shape(sgpools_sf) +
  tm_bubbles(col = "OUTLET TYPE", 
          size = "Gp1Gp2 Winnings",
          border.col = "black",
          border.lwd = 1) +
  tm_facets(by= "OUTLET TYPE",
            nrow = 1,
            sync = TRUE)
```

# Choropleth Map

Import geographic data
```{r}
mpsz <- st_read(dsn = "data/geospatial", 
                layer = "MP14_SUBZONE_WEB_PL")
```

Import attribute data
```{r}
popdata <- read_csv("data/aspatial/respopagesextod2011to2020.csv")
```

Data wrangling
```{r}
popdata2020 <- popdata %>%
  filter(Time == 2020) %>%
  group_by(PA, SZ, AG) %>%
  summarise(`POP` = sum(`Pop`)) %>%
  ungroup()%>%
  pivot_wider(names_from=AG, 
              values_from=POP) %>%
  mutate(YOUNG = rowSums(.[3:6])
         +rowSums(.[12])) %>%
mutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+
rowSums(.[13:15]))%>%
mutate(`AGED`=rowSums(.[16:21])) %>%
mutate(`TOTAL`=rowSums(.[3:21])) %>%  
mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)
/`ECONOMY ACTIVE`) %>%
  select(`PA`, `SZ`, `YOUNG`, 
       `ECONOMY ACTIVE`, `AGED`, 
       `TOTAL`, `DEPENDENCY`)
```
###Joining attribute and geographic data
Turn SZ to upper for join

```{r}
popdata2020 <- popdata2020 %>%
  mutate_at(.vars = vars(PA, SZ), 
          .funs = funs(toupper)) %>%
  filter(`ECONOMY ACTIVE` > 0)
```
Left-join (left to be spatial data)
```{r}
mpsz_pop2020 <- left_join(mpsz, popdata2020,
                          by = c("SUBZONE_N" = "SZ"))
```

