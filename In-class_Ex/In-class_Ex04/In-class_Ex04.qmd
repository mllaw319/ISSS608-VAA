---
title: "In-Class Exercise 4"
author: "Law Man Long"
date: "4 February 2023"
date-modified: "`r Sys.Date()`"
execute: 
  echo: true
  eval: true
  results: hide
  message: false
  warning: false
format: html
editor: visual
---

```{r}
pacman::p_load(plotly, DT, patchwork, ggstatsplot, tidyverse)
```

```{r}
exam_data <- read_csv("data/Exam_data.csv")
```

##plot_ly method

```{r}
plot_ly(data = exam_data, 
        x = ~ENGLISH, 
        y = ~MATHS, 
        color = ~RACE)
```

## ggplotly() method

```{r}
p <- ggplot(data=exam_data, 
            aes(x = MATHS,
                y = ENGLISH)) +
  geom_point(dotsize = 1) +
  coord_cartesian(xlim=c(0,100),
                  ylim=c(0,
                         100))
ggplotly(p)
```

## ggstatsplot

```{r}
pacman::p_load(ggstatsplot, tidyverse)
```

```{r}
ggbetweenstats(
  data = exam_data,
  x = GENDER, 
  y = MATHS,
  type = "p",
  messages = FALSE
)
```

## Visualising models

```{r}
pacman::p_load(readxl, performance, parameters, see, gtsummary)
```

```{r}
car_resale <- read_xls("data/ToyotaCorolla.xls", 
                       "data")
car_resale
```

```{r}
model <- lm(Price ~ Age_08_04 + Mfg_Year + KM + 
              Weight + Guarantee_Period, data = car_resale)
model
```

Can use tbl_summary for saving as dataframe

https://www.danieldsjoberg.com/gtsummary/articles/tbl_summary.html

```{r}
check_c <- check_collinearity(model)
plot(check_c)
```

Age_08_04 and Mfg_yr are highly correlated

```{r}
model1 <- lm(Price ~ Age_08_04 + KM + 
              Weight + Guarantee_Period, data = car_resale)
```

```{r}
check_n <- check_normality(model1)
plot(check_n)
```

```{r}
tbl_regression(model1,
               intercept = TRUE)
```

```{r, fig.width=10,fig.height=11}
check_model(model1)
```

### Visualise parameters of a regression model

```{r}
plot(parameters(model1))
```

```{r}
ggcoefstats(model,
            output = 'plot')
```

## Visualize uncertainty

ggdist

https://mjskay.github.io/ggdist/reference/index.html

```{r}
pacman::p_load(tidyverse, plotly, crosstalk, DT, ggdist, gganimate)
```

```{r}
exam <- read_csv("data/Exam_data.csv")
```

### Visualize using ggplot2

```{r}
my_sum <- exam %>%
  group_by(RACE) %>%
  summarise(
    n=n(),
    mean=mean(MATHS),
    sd=sd(MATHS)
    ) %>%
  mutate(se=sd/sqrt(n-1))
```

```{r}
ggplot(my_sum) +
  geom_errorbar(
    aes(x=RACE, 
        ymin=mean-se, 
        ymax=mean+se), 
    width=0.2, 
    colour="black", 
    alpha=0.9, 
    size=0.5) +
   geom_point(aes
           (x=RACE, 
            y=mean), 
           stat="identity", 
           color="red",
           size = 1.5,
           alpha=1) +
  ggtitle("Standard error of mean 
          maths score by race")
```
